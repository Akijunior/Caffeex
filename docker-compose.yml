version: '3'

services:
  djangoapp:
    build: .
    command: bash -c "python gpsautotracker/manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/opt/services/djangoapp/src
      - static_volume:/opt/services/djangoapp/src/gpsautotracker/staticfiles
      - media_volume:/opt/services/djangoapp/media
#    expose:
#      - "8000"
    networks:
    - nginx_network
#    - infoseguro_network
#    - gpsautotracker_network
#    - temp_db_network
#    depends_on:  # <-- wait for db to be "ready" before starting the app
#    - infoseguro
#    - gpsautotracker
#    - temp_db

  nginx:
    image: nginx:latest
    ports:
    - 8000:80
    volumes:
      - ./config/nginx/conf.d:/etc/nginx/conf.d
      - static_volume:/opt/services/djangoapp/staticfiles
      - media_volume:/opt/services/djangoapp/media
    depends_on:
    - djangoapp
    networks:
    - nginx_network

#  infoseguro:  # <-- IMPORTANT: same name as in DATABASES setting, otherwise Django won't find the database!
#    image: postgres:10
#    env_file:  # <-- we use the previously defined values
#    - config/db/infoseguro_env
#    networks:  # <-- connect to the bridge
#    - infoseguro_network
##    ports:
##      - 5431:10001
#    volumes:
#    - infoseguro_volume:/var/lib/postgresql/data
#
#  gpsautotracker:
#    image: postgres:10
#    env_file:
#    - config/db/gpsautotracker_env
#    networks:
#    - gpsautotracker_network
#    volumes:
#    - gpsautotracker_volume:/var/lib/postgresql/data
#
#  temp_db:
#    image: postgres:10
#    env_file:
#    - config/db/temp_db_env
#    networks:
#    - temp_db_network
#    volumes:
#    - temp_db_volume:/var/lib/postgresql/data

networks:
  nginx_network:
    driver: bridge

#  infoseguro_network:
#    driver: bridge
#
#  gpsautotracker_network:
#    driver: bridge
#
#  temp_db_network:
#    driver: bridge

volumes:
#  infoseguro_volume:
#  gpsautotracker_volume:
#  temp_db_volume:
  static_volume:
  media_volume:  # <-- declare the media volume